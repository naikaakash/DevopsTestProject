trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: BuildC
  displayName: 'Build and Upload C Binary'
  jobs:
  - job: BuildC
    steps:
    - task: UsePythonVersion@0  # Optional, sometimes required for some tools
    - checkout: self

    - script: |
        cd c_binary
        ./configure
        make
        ./hello  # Replace with actual C binary if different
      displayName: 'Build and Run C Binary'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: 'c_binary/hello'  # Adjust path if needed
        artifactName: 'c-binary'

- stage: BuildCpp
  displayName: 'Build and Upload C++ Binary'
  jobs:
  - job: BuildCpp
    steps:
    - checkout: self

    - script: |
        mkdir -p cpp_binary/build
        cd cpp_binary/build
        cmake ..
        make
        ./myapp  # Replace with actual C++ binary if different
      displayName: 'Build and Run C++ Binary'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: 'cpp_binary/build/myapp'
        artifactName: 'cpp-binary'

- stage: BuildRust
  displayName: 'Build and Upload Rust Binary'
  jobs:
  - job: BuildRust
    steps:
    - checkout: self

    - script: |
        cd rust_binary/hello_world
        cargo build --release
        ./target/release/hello_world  # Replace with actual Rust binary if different
      displayName: 'Build and Run Rust Binary'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: 'rust_binary/hello_world/target/release/hello_world'
        artifactName: 'rust-binary'
